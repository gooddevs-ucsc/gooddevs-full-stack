"""Add Payments table

Revision ID: 38b4d8b9d307
Revises: 33dbc9054b2f
Create Date: 2025-08-28 17:32:17.196047

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '38b4d8b9d307'
down_revision = '33dbc9054b2f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PENDING', 'CANCELLED', 'FAILED', 'CHARGEDBACK',
            'SUCCESS', name='paymentstatus').create(op.get_bind())
    sa.Enum('LKR', 'USD', name='paymentcurrency').create(op.get_bind())
    op.create_table('payment',
                    sa.Column('merchant_id', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(
                        length=50), nullable=False),
                    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(
                        length=500), nullable=False),
                    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(
                        length=255), nullable=False),
                    sa.Column('items', sqlmodel.sql.sqltypes.AutoString(
                        length=1000), nullable=False),
                    sa.Column('currency', postgresql.ENUM('LKR', 'USD',
                                                          name='paymentcurrency', create_type=False), nullable=True),
                    sa.Column('amount', sa.Float(), nullable=False),
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('order_id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('status', postgresql.ENUM('PENDING', 'CANCELLED', 'FAILED', 'CHARGEDBACK',
                                                        'SUCCESS', name='paymentstatus', create_type=False), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.alter_column('projectapplication', 'volunteer_role',
                    existing_type=postgresql.ENUM(
                        'FRONTEND', 'BACKEND', 'FULLSTACK', 'UIUX', 'MOBILE', 'DEVOPS', 'QA', 'PM', name='developerrole'),
                    nullable=True)
    op.alter_column('projectapplication', 'status',
                    existing_type=postgresql.ENUM(
                        'PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN', name='applicationstatus'),
                    nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projectapplication', 'status',
                    existing_type=postgresql.ENUM(
                        'PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN', name='applicationstatus'),
                    nullable=False)
    op.alter_column('projectapplication', 'volunteer_role',
                    existing_type=postgresql.ENUM(
                        'FRONTEND', 'BACKEND', 'FULLSTACK', 'UIUX', 'MOBILE', 'DEVOPS', 'QA', 'PM', name='developerrole'),
                    nullable=False)
    op.drop_table('payment')
    sa.Enum('LKR', 'USD', name='paymentcurrency').drop(op.get_bind())
    sa.Enum('PENDING', 'CANCELLED', 'FAILED', 'CHARGEDBACK',
            'SUCCESS', name='paymentstatus').drop(op.get_bind())
    # ### end Alembic commands ###
